//
//  MenuViewController.swift
//  EnglishApp
//
//  Created Kai Pham on 5/9/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

protocol MenuViewControllerDelegate: class {
    
    //    func openViewController(presentingController: UIViewController)
    func selected(item: MenuItem)
    func loginTapped()
    //    func presentViewController(presentingController: UIViewController)
    //    func popToRootViewController()
    //    func closeDrawer()
}


class MenuViewController: UIViewController, MenuViewProtocol {
    @IBOutlet weak var tbMenu: UITableView!
    var presenter: MenuPresenterProtocol?
    weak var delegateController: MenuViewControllerDelegate?
    @IBOutlet weak var lbLogin: UILabel!
    @IBOutlet weak var lbDisplayname: UILabel!
    @IBOutlet weak var lbOwner: UILabel!
    @IBOutlet weak var vRegisterOwner: UIView!
    
    var listMenuItem = [MenuItem]() {
        didSet {
            tbMenu.reloadData()
        }
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        configureTable()
        listMenuItem = MenuItem.toArray()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
        self.listMenuItem.forEach { item in
            item.isSelected = false
        }
        listMenuItem = MenuItem.toArray()
        tbMenu.reloadData()
        setUserName()
    }
    
    func setUserName() {
        if UserDefaultHelper.shared.loginUserInfo == nil {
            // not login
            lbLogin.text = "Đăng Nhập"
            lbDisplayname.isHidden = true
            lbOwner.isHidden = true
            vRegisterOwner.isHidden = true
        } else {
            // LoggedIn user
            lbLogin.text = "Đăng Xuất"
            lbDisplayname.isHidden = false
            lbOwner.isHidden = true
            vRegisterOwner.isHidden = false
            
            lbDisplayname.text = UserDefaultHelper.shared.loginUserInfo?.nameShowUI
             // LoggedIn owner
        }
    }
    
    @IBAction func btnLoginLogoutTapped() {
        // need login
        if UserDefaultHelper.shared.loginUserInfo == nil {
            delegateController?.loginTapped()
        } else {
            
            PopUpHelper.shared.showLogout(completionNo: {
               
            }) {
                ProgressView.shared.showProgressOnWindow()
                Provider.shared.userAPIService.logout(success: { _ in
                    ProgressView.shared.hide()
                    UserDefaultHelper.shared.clearUser()
                    AppRouter.shared.openHomeView()
                
                }) { _ in
                    ProgressView.shared.hide()
                }
            }
        }
    }
}

extension MenuViewController: UITableViewDelegate, UITableViewDataSource {
    func configureTable() {
        tbMenu.delegate = self
        tbMenu.dataSource = self
        tbMenu.registerXibFile(MenuCell.self)
        tbMenu.separatorStyle = .none
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeue(MenuCell.self, for: indexPath)
        cell.menuItem = self.listMenuItem[indexPath.item]
        return cell
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return listMenuItem.count
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 60
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let itemSelected = self.listMenuItem[indexPath.item]
        self.listMenuItem.forEach { item in
            item.isSelected = false
        }
        
        itemSelected.isSelected = true
        
        delegateController?.selected(item: itemSelected)
        
        tbMenu.reloadData()
    }
}

