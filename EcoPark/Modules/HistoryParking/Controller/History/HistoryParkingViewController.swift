//
//  HistoryParkingViewController.swift
//  EcoPark
//
//  Created Steve on 11/1/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import XLPagerTabStrip

enum TypeHistoryParking {
    case doing
    case history
}

class HistoryParkingViewController: ListManagerVC {

	var presenter: HistoryParkingPresenterProtocol?
    var type: TypeHistoryParking = .doing
    
    override func setUpViews() {
        super.setUpViews()
        if type == .doing {
            self.presenter?.getDoingBooking()
        } else {
            self.presenter?.getHistoryBooking()
        }
        self.view.backgroundColor = .clear
    }

    override func registerTableView() {
        super.registerTableView()
        self.tableView.registerXibFile(DoingCell.self)
    }
    
    override func cellForRowListManager(item: Any, _ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = self.tableView.dequeue(DoingCell.self, for: indexPath)
        cell.setupCell(data: item as! HistoryBookingParkingResponse)
        return cell
    }
    
    override func didSelectTableView(item: Any, indexPath: IndexPath) {
        let data = item as! HistoryBookingParkingResponse
        let vc = DetailParkingRouter.createModule(type: StatusBooking(rawValue: data.status ?? "") ?? StatusBooking.cancel, bookingId: data._id ?? "")
        self.push(controller: vc, animated: true)
    }
}

extension HistoryParkingViewController: IndicatorInfoProvider {
    func indicatorInfo(for pagerTabStripController: PagerTabStripViewController) -> IndicatorInfo {
        return self.type == .doing ? IndicatorInfo(title: LocalizableKey.doing.showLanguage) : IndicatorInfo(title: LocalizableKey.history.showLanguage)
    }
}

extension HistoryParkingViewController : HistoryParkingViewProtocol{
    func reloadViewDoingBooking(data: [HistoryBookingParkingResponse]) {
        self.initLoadData(data: data)
    }
    
    func reloadViewHistoryBooking(data: [HistoryBookingParkingResponse]) {
        self.initLoadData(data: data)
    }
}

