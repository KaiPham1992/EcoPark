//
//  HistoryParkingViewController.swift
//  EcoPark
//
//  Created Steve on 11/1/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import XLPagerTabStrip

enum TypeHistoryParking {
    case doing
    case history
}

class HistoryParkingViewController: ListManagerVC, HistoryParkingViewProtocol {

	var presenter: HistoryParkingPresenterProtocol?
    var type: TypeHistoryParking = .doing
    
    override func setUpViews() {
        super.setUpViews()
        DispatchQueue.main.asyncAfter(deadline: .now() + 0.1) {
            self.initLoadData(data: Array(repeating: 1, count: 10))
        }
        self.view.backgroundColor = .clear
    }

    override func registerTableView() {
        super.registerTableView()
        self.tableView.registerXibFile(DoingCell.self)
    }
    
    override func cellForRowListManager(item: Any, _ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = self.tableView.dequeue(DoingCell.self, for: indexPath)
        return cell
    }
    
    override func didSelectTableView(item: Any, indexPath: IndexPath) {
        var vc : UIViewController
        if indexPath.row == 0 {
            vc = DetailParkingRouter.createModule(type: TypeDetailParking.checkin)
        } else if indexPath.row == 1 {
            vc = DetailParkingRouter.createModule(type: TypeDetailParking.checkout)
        } else {
            vc = DetailParkingRouter.createModule(type: TypeDetailParking.complete)
        }
        self.push(controller: vc, animated: true)
    }
}

extension HistoryParkingViewController: IndicatorInfoProvider {
    func indicatorInfo(for pagerTabStripController: PagerTabStripViewController) -> IndicatorInfo {
        return self.type == .doing ? IndicatorInfo(title: "Doing") : IndicatorInfo(title: "History")
    }
}

