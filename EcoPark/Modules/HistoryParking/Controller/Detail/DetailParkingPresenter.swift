//
//  DetailParkingPresenter.swift
//  EcoPark
//
//  Created Steve on 11/3/19.
//  Copyright © 2019 demo. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class DetailParkingPresenter: DetailParkingPresenterProtocol, DetailParkingInteractorOutputProtocol {
    
    weak private var view: DetailParkingViewProtocol?
    var interactor: DetailParkingInteractorInputProtocol?
    private let router: DetailParkingWireframeProtocol
    
    init(interface: DetailParkingViewProtocol, interactor: DetailParkingInteractorInputProtocol?, router: DetailParkingWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func getBookingDetail(id: String) {
        self.interactor?.getBookingDetail(id: id)
    }
    
    func didGetBookingDetail(info: BookingDetailEntity) {
        self.view?.didGetBookingDetail(info: info)
    }
    
    func didGetError(error: APIError) {
        self.view?.didGetError(error: error)
    }
    
    func cancelReservation(id: String) {
        self.interactor?.cancelReservation(id: id)
    }
    
    func didCancelReservation() {
        self.view?.didCancelReservation()
    }
    
    func extendReservation(id: String) {
        self.interactor?.extendReservation(id: id)
    }
    
    func didExtendReservation(info: BookingDetailEntity) {
        self.view?.didExtendReservation(info: info)
    }
    
    func scanQRCheckIn(parkingId: String, bossParkingId: String) {
        ProgressView.shared.show()
        
        Provider.shared.userAPIService.scanQRCheckIn(parkingId: parkingId, bossParkingId: bossParkingId, success: { bookingDetail in
            ProgressView.shared.hide()
            guard let bookingDetail = bookingDetail else { return }
            self.view?.didGetBookingDetail(info: bookingDetail)
        }) { error in
            ProgressView.shared.hide()
            guard let error = error else { return }
            self.view?.didGetError(error: error)
        }
    }
    
    func scanQRCheckOut(bookingId: String, code: String, licensePlates: String) {
        ProgressView.shared.show()
        
        Provider.shared.userAPIService.scanQRCheckOut(bookingId: bookingId, code: code, licensePlates: licensePlates, success: { bookingDetail in
            ProgressView.shared.hide()
            guard let bookingDetail = bookingDetail else { return }
            self.view?.didGetBookingDetail(info: bookingDetail)
        }, failure: { error in
            ProgressView.shared.hide()
            guard let error = error else { return }
            self.view?.didGetError(error: error)
        })
    }
    
    func ratingBooking(bookingId: String, rating: String) {
        ProgressView.shared.show()
        Provider.shared.bookingAPIService.ratingBooking(bookingId: bookingId, rating: rating, success: { ratingEntity in
            ProgressView.shared.hide()
            guard let ratingEntity = ratingEntity else { return }
            self.view?.didGetRating(rating: ratingEntity)
        }, failure: { error in
            ProgressView.shared.hide()
            guard let error = error else { return }
            self.view?.didGetError(error: error)
        })
    }
    
}
